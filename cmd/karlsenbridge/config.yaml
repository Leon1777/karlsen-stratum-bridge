# stratum_listen_port: the port that will be listening for incoming stratum
# traffic
# Note `:PORT` format is needed if not specifying a specific IP range
stratum_port: :5555

# karlsend_address: address/port of the RPC server for karlsend, typically 42110
# For a list of public nodes, run `nslookup mainnet-dnsseed-1.karlsencoin.com`
# Uncomment to use a public node
# karlsend_address: 46.17.104.200:42110
karlsend_address: localhost:42110
#karlsend_address: localhost:42210

# solo_mining: if true, use network difficulty instead of stratum variable difficulty (vardiff)
solo_mining: false

# min_share_diff: only accept shares of the specified difficulty (or higher)
# from the miner(s). Higher values will reduce the number of shares submitted,
# thereby reducing network traffic and server load, while lower values will
# increase the number of shares submitted, thereby reducing the amount of time
# needed for accurate hashrate measurements.
#
# If var_diff is enabled, min_share_diff will be the starting difficulty.
#
# Default value is chosen to accommodate current top-of-the-line GPUs. If you
# don't want to change the default to match your device(s), the vardiff engine
# will adjust to an appropriate diff for lower hashrate devices within a few
# minutes.
#
# If set to 0, the minimum difficulty will default to 0.1
min_share_diff: 4

# var_diff: if true, enables the auto-adjusting variable share diff mechanism.
# Starts with the value defined by the 'min_share_diff' setting, then checks
# every 10s whether each client is maintaining a 20 shares/minute submission
# rate, and sends an updated min diff per client if necessary. Max tolerance
# is +/- 5% after 4 hours.
var_diff: true

# shares_per_min: number of shares per minute the vardiff engine should target.
# Default value is chosen to allow for 95% confidence in measurement accuracy,
# which affects fidelity of difficulty update decisions, as well as hashrate
# stability (measured 1-hour average hashrate should be within +/- 10% of actual, with
# the noted confidence.)  Higher values will result in better vardiff engine
# performance and increased hashrate stability.  Lower values will cause
# vardiff to behave more erratically, while measured hashrate will display
# larger variations.
#
# Example values and their resulting confidence levels:
# 20 => 99%, 15 => 95%, 12 => 90%
shares_per_min: 15

# var_diff_stats: if true, print vardiff engine stats to the log every 10 seconds
var_diff_stats: true

# block_wait_time: time to wait since last new block message from karlsend before
# manually requesting a new block. Examples are '500ms', '3s', '1m', etc.
block_wait_time: 3s

# extranonce_size: size in bytes of extranonce, from 0 (no extranonce) to 3.
# With no extranonce (0), all clients will search through the same nonce-space,
# therefore performing duplicate work unless the miner(s) implement client
# side nonce randomizing.  More bytes allow for more clients with unique
# nonce-spaces (i.e. no overlapping work), but reduces the per-client
# overall nonce-space (though with 1s block times, this shouldn't really
# be a concern).
# 1 byte = 256 clients, 2 bytes = 65536, 3 bytes = 16777216.
extranonce_size: 0

# print_stats: if true will print stats to the console, false just workers
# joining/disconnecting, blocks found, and errors will be printed
print_stats: true

# log_to_file: if true logs will be written to a file local to the executable
log_to_file: true

# prom_port: if specified, Prometheus will serve stats on the port provided
# See readme for a summary on how to get Prometheus up and running using Docker
# You can get the raw metrics (along with default GoLang metrics) using
# `curl http://localhost:{prom_port}/metrics`
# Note `:PORT` format is needed if not specifying a specific IP range
prom_port: :2114
